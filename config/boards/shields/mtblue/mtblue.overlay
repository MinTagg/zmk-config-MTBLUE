/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan;
        zmk,matrix_transform = &transform;
    };


    transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <3>;
        columns = <3>;

        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,4)
        RC(1,0)         RC(1,2)
        RC(2,0) RC(2,1) RC(2,2)
        >;
    }; 


    kscan: kscan {
        compatible = "zmk,kscan-composite";
        label = "KSCAN";
        rows = <3>;
        columns = <3>;

        matrix {
            kscan = <&kscan_matrix>;
        };

        direct {
            kscan = <&kscan_enc>;
            column-offset = <4>; // 위쪽 map에 RC(0,4)에 해당하는 column인 4가 여기에 해당
        };
    };


    kscan_matrix: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN_MATRIX";

        diode-direction = "col2row"; 

        col-gpios
            = <&pro_micro 15 GPIO_ACTIVE_HIGH>
            , <&pro_micro 14 GPIO_ACTIVE_HIGH>
            , <&pro_micro 16 GPIO_ACTIVE_HIGH>
            ;
        row-gpios
            = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    kscan_enc: kscan_enc {
        compatible = "zmk,kscan-gpio-direct";
        label = "KSCAN_ENC";
        input-gpios
            = <&pro_micro 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

   encoder: encoder {
        compatible = "alps,ec11";
        label = "ENCODER";
        resolution = <4>;
        a-gpios = <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // DT (B)
        b-gpios = <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // CLK (A)
    };
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
    };
};
